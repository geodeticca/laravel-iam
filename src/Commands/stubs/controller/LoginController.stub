<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\View;
use Illuminate\Foundation\Auth\ThrottlesLogins;
use Illuminate\Validation\ValidationException;

class LoginController extends Controller
{
    use ThrottlesLogins;

    public function showLoginForm()
    {
        return View::make('iam::auth.login');
    }

    public function login(Request $request)
    {
        $validation = [
            $this->username() => 'required|string',
            'password' => 'required|string',
        ];

        $this->validate($request, $validation);

        if ($this->hasTooManyLoginAttempts($request)) {
            $this->fireLockoutEvent($request);

            return $this->sendLockoutResponse($request);
        }

        $credentials = [
            'login' => $request->input($this->username()),
            'password' => $request->input('password'),
        ];

        $attempt = $this->guard()->attempt($credentials);

        if ($attempt) {
            $this->clearLoginAttempts($request);

            return Redirect::intended('/');
        }

        throw ValidationException::withMessages([
            $this->username() => [trans('auth.failed')],
        ]);
    }

    public function logout(Request $request)
    {
        $this->guard()->logout();

        return Redirect::to('/');
    }

    /**
     * @return \Illuminate\Contracts\Auth\Guard
     */
    protected function guard()
    {
        return Auth::guard();
    }

    /**
     * @return string
     */
    public function username()
    {
        return 'email';
    }
}
